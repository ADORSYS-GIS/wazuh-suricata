name: Bats Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-ids:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update
          sudo apt-get install -y bats curl jq sed
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          brew install bats coreutils curl jq gnu-sed docker
        fi

    - name: Make script executable
      run: chmod +x ./scripts/install.sh
      
    - name: Install Suricata
      run: |
        ./scripts/install.sh

    - name: Run Bats tests
      run: sudo bats tests/

  test-ips:
    runs-on: ubuntu-latest
    needs: test-ids

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bats curl jq sed

    - name: Make script executable
      run: chmod +x ./scripts/install.sh

    - name: Install Suricata in IPS mode
      run: |
        ./scripts/install.sh --mode ips

    - name: Run Bats tests for IPS mode
      run: sudo MODE=ips bats tests/

  test-powershell:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Pester
        run: |
          Install-PackageProvider -Name NuGet
          Install-Module -Name Pester
        shell: pwsh
        
      - name: Install Suricata in IDS mode
        run: |
          & '.\scripts\install.ps1'
        shell: pwsh
      - name: Run PowerShell Pester tests
        run: |
          pwsh -NoProfile -Command "Invoke-Pester -Path '.\scripts\install.ps1' -Output Detailed"
        shell: pwsh